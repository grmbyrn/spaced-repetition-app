{
  "language": "rust",
  "title": "Rust",
  "chapters": [
    {
      "id": "installation",
      "title": "Rust Installation, Hello World, Hello Cargo",
      "questions": [
        {
          "id": "q1",
          "questionText": "What kind of programming language is Rust?",
          "options": [
            "Interpreted, dynamically typed",
            "Compiled, statically typed",
            "Interpreted, statically typed",
            "Compiled, dynamically typed"
          ],
          "correctIndex": 1,
          "explanation": "Rust is a compiled language (using rustc) and uses static typing, which helps catch many errors at compile time."
        },
        {
          "id": "q2",
          "questionText": "What is the main advantage of using Cargo over manually using rustc?",
          "options": [
            "Cargo can only run unit tests",
            "Cargo creates executables for Python",
            "Cargo simplifies project structure and builds",
            "Cargo allows editing source code in a browser"
          ],
          "correctIndex": 2,
          "explanation": "Cargo is Rust’s package manager and build tool, streamlining compilation, dependencies, and project setup."
        },
        {
          "id": "q3",
          "questionText": "What does the exclamation mark in println! indicate in Rust?",
          "options": [
            "It is a syntax error",
            "It denotes a macro, not a regular function",
            "It marks the function as unsafe",
            "It is optional and can be removed"
          ],
          "correctIndex": 1,
          "explanation": "In Rust, macros like println! use ! to distinguish them from regular functions."
        },
        {
          "id": "q4",
          "questionText": "What is the function of the cargo check command?",
          "options": [
            "Compiles and runs the program",
            "Checks syntax and logic but doesn’t compile",
            "Checks for compilation errors without generating executable",
            "Updates all dependencies"
          ],
          "correctIndex": 2,
          "explanation": "cargo check is used for fast syntax and type-checking, without building the binary."
        },
        {
          "id": "q5",
          "questionText": "What is the significance of cargo build --release?",
          "options": [
            "It builds the debug version of the app",
            "It builds a slower, more verbose version of the binary",
            "It creates an optimized, production-ready binary",
            "It updates all dependencies and compiles"
          ],
          "correctIndex": 2,
          "explanation": "--release enables compiler optimizations, producing faster and smaller binaries for production use."
        }
      ]
    },
    {
      "id": "variables",
      "title": "Variables in Rust",
      "questions": [
        {
          "id": "v1",
          "questionText": "Which keyword is used to declare a variable in Rust?",
          "options": [
            "mut",
            "let",
            "var",
            "const"
          ],
          "correctIndex": 1,
          "explanation": "The 'let' keyword is used to declare variables in Rust."
        },
        {
          "id": "v2",
          "questionText": "How do you make a variable mutable in Rust?",
          "options": [
            "Use the 'mut' keyword",
            "Use the 'var' keyword",
            "Use the 'let' keyword",
            "Use the 'mutable' keyword"
          ],
          "correctIndex": 0,
          "explanation": "Adding 'mut' before the variable name makes it mutable in Rust."
        },
        {
          "id": "v3",
          "questionText": "What will happen if you try to change an immutable variable?",
          "options": [
            "It will cause a compile-time error",
            "It will change successfully",
            "It will cause a runtime error",
            "It will be ignored"
          ],
          "correctIndex": 0,
          "explanation": "Trying to change an immutable variable causes a compile-time error in Rust."
        },
        {
          "id": "v4",
          "questionText": "Which of the following is a valid variable declaration in Rust?",
          "options": [
            "var x = 5;",
            "let x = 5;",
            "mut x = 5;",
            "x := 5;"
          ],
          "correctIndex": 1,
          "explanation": "'let x = 5;' is the correct syntax for declaring a variable in Rust."
        },
        {
          "id": "v5",
          "questionText": "How do you declare a constant in Rust?",
          "options": [
            "mut PI = 3.14;",
            "let PI = 3.14;",
            "const PI: f64 = 3.14;",
            "constant PI = 3.14;"
          ],
          "correctIndex": 2,
          "explanation": "Constants in Rust are declared using 'const' and must have a type specified."
        }
      ]
    }
  ]
}